{"id":"../node_modules/graphql/utilities/concatAST.mjs","dependencies":[{"name":"/home/genius/Documents/project/react/node_graphql/package.json","includedInParent":true,"mtime":1650894311812},{"name":"/home/genius/Documents/project/react/node_graphql/.babelrc","includedInParent":true,"mtime":1650829125937},{"name":"/home/genius/Documents/project/react/node_graphql/node_modules/graphql/package.json","includedInParent":true,"mtime":1650687900212},{"name":"../language/kinds.mjs","loc":{"line":1,"column":21,"index":21},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/graphql/utilities/concatAST.mjs","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/graphql/language/kinds.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concatAST = concatAST;\n\nvar _kinds = require(\"../language/kinds.mjs\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nfunction concatAST(documents) {\n  var definitions = [];\n\n  var _iterator = _createForOfIteratorHelper(documents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var doc = _step.value;\n      definitions.push.apply(definitions, _toConsumableArray(doc.definitions));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    kind: _kinds.Kind.DOCUMENT,\n    definitions: definitions\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":1,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":2,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":3,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":4,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":5,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":6,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":7}},{"name":"concatAST","generated":{"line":29,"column":9},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":16}},{"generated":{"line":29,"column":18},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":7}},{"name":"documents","generated":{"line":29,"column":19},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":26}},{"generated":{"line":29,"column":28},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":7}},{"generated":{"line":29,"column":30},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":30,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":9,"column":2}},{"name":"definitions","generated":{"line":30,"column":6},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":9,"column":8}},{"generated":{"line":30,"column":17},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":9,"column":19}},{"generated":{"line":30,"column":20},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":9,"column":22}},{"generated":{"line":30,"column":22},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":9,"column":2}},{"generated":{"line":32,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"name":"documents","generated":{"line":32,"column":45},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":11,"column":20}},{"generated":{"line":32,"column":54},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":33,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":35,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":36,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":11,"column":2}},{"generated":{"line":36,"column":56},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":11,"column":31}},{"generated":{"line":37,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":11,"column":31}},{"name":"doc","generated":{"line":37,"column":10},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":11,"column":13}},{"generated":{"line":37,"column":13},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":11,"column":31}},{"name":"definitions","generated":{"line":38,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":4}},{"name":"definitions","generated":{"line":38,"column":6},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":4}},{"generated":{"line":38,"column":17},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":15}},{"name":"push","generated":{"line":38,"column":18},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":16}},{"generated":{"line":38,"column":22},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":4}},{"name":"definitions","generated":{"line":38,"column":29},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":4}},{"generated":{"line":38,"column":40},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":15}},{"name":"doc","generated":{"line":38,"column":61},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":24}},{"generated":{"line":38,"column":64},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":27}},{"name":"definitions","generated":{"line":38,"column":65},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":28}},{"generated":{"line":38,"column":76},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":15}},{"generated":{"line":38,"column":78},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":12,"column":4}},{"generated":{"line":39,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":13,"column":3}},{"generated":{"line":40,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":41,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":42,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":43,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":44,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":8,"column":37}},{"generated":{"line":46,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":15,"column":2}},{"generated":{"line":46,"column":9},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":15,"column":9}},{"name":"kind","generated":{"line":47,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":16,"column":4}},{"name":"kind","generated":{"line":47,"column":4},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":16,"column":4}},{"generated":{"line":47,"column":8},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":16,"column":8}},{"name":"Kind","generated":{"line":47,"column":10},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":16,"column":10}},{"name":"DOCUMENT","generated":{"line":47,"column":22},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":16,"column":15}},{"generated":{"line":47,"column":30},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":15,"column":9}},{"name":"definitions","generated":{"line":48,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":17,"column":4}},{"name":"definitions","generated":{"line":48,"column":4},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":17,"column":4}},{"generated":{"line":48,"column":15},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":17,"column":15}},{"name":"definitions","generated":{"line":48,"column":17},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":17,"column":4}},{"generated":{"line":49,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":15,"column":9}},{"generated":{"line":49,"column":3},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":15,"column":2}},{"generated":{"line":50,"column":0},"source":"../node_modules/graphql/utilities/concatAST.mjs","original":{"line":19,"column":1}}],"sources":{"../node_modules/graphql/utilities/concatAST.mjs":"import { Kind } from '../language/kinds.mjs';\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\n\nexport function concatAST(documents) {\n  const definitions = [];\n\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n\n  return {\n    kind: Kind.DOCUMENT,\n    definitions,\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"5b5e190a3d365b8319d9f90a93d2514e","cacheData":{"env":{}}}