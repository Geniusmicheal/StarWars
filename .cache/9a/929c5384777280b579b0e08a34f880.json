{"id":"../node_modules/graphql/jsutils/promiseReduce.mjs","dependencies":[{"name":"/home/genius/Documents/project/react/node_graphql/package.json","includedInParent":true,"mtime":1650829226853},{"name":"/home/genius/Documents/project/react/node_graphql/.babelrc","includedInParent":true,"mtime":1650829125937},{"name":"/home/genius/Documents/project/react/node_graphql/node_modules/graphql/package.json","includedInParent":true,"mtime":1650687900212},{"name":"./isPromise.mjs","loc":{"line":1,"column":26,"index":26},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/graphql/jsutils/promiseReduce.mjs","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/graphql/jsutils/isPromise.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.promiseReduce = promiseReduce;\n\nvar _isPromise = require(\"./isPromise.mjs\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callbackFn, initialValue) {\n  var accumulator = initialValue;\n\n  var _iterator = _createForOfIteratorHelper(values),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var value = _step.value;\n      accumulator = (0, _isPromise.isPromise)(accumulator) ? accumulator.then(function (resolved) {\n        return callbackFn(resolved, value);\n      }) : callbackFn(accumulator, value);\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return accumulator;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":3,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":5,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":6,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":7,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":8,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":9,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":7}},{"name":"promiseReduce","generated":{"line":23,"column":9},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":16}},{"generated":{"line":23,"column":22},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":7}},{"name":"values","generated":{"line":23,"column":23},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":30}},{"generated":{"line":23,"column":29},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":7}},{"name":"callbackFn","generated":{"line":23,"column":31},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":38}},{"generated":{"line":23,"column":41},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":7}},{"name":"initialValue","generated":{"line":23,"column":43},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":50}},{"generated":{"line":23,"column":55},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":7}},{"generated":{"line":23,"column":57},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":24,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":11,"column":2}},{"name":"accumulator","generated":{"line":24,"column":6},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":11,"column":6}},{"generated":{"line":24,"column":17},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":11,"column":17}},{"name":"initialValue","generated":{"line":24,"column":20},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":11,"column":20}},{"generated":{"line":24,"column":32},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":11,"column":2}},{"generated":{"line":26,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"name":"values","generated":{"line":26,"column":45},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":13,"column":22}},{"generated":{"line":26,"column":51},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":27,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":29,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":30,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":31,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"name":"value","generated":{"line":31,"column":10},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":13,"column":13}},{"generated":{"line":31,"column":15},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"name":"accumulator","generated":{"line":32,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":14,"column":4}},{"name":"accumulator","generated":{"line":32,"column":6},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":14,"column":4}},{"generated":{"line":32,"column":17},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":14,"column":15}},{"generated":{"line":32,"column":20},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":14,"column":18}},{"name":"accumulator","generated":{"line":32,"column":46},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":14,"column":28}},{"generated":{"line":32,"column":57},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":14,"column":18}},{"name":"accumulator","generated":{"line":32,"column":61},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":8}},{"generated":{"line":32,"column":72},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":19}},{"name":"then","generated":{"line":32,"column":73},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":20}},{"generated":{"line":32,"column":77},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":8}},{"generated":{"line":32,"column":78},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":25}},{"name":"resolved","generated":{"line":32,"column":88},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":26}},{"generated":{"line":32,"column":96},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":25}},{"generated":{"line":33,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":25}},{"name":"callbackFn","generated":{"line":33,"column":15},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":39}},{"generated":{"line":33,"column":25},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":49}},{"name":"resolved","generated":{"line":33,"column":26},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":50}},{"generated":{"line":33,"column":34},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":49}},{"name":"value","generated":{"line":33,"column":36},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":60}},{"generated":{"line":33,"column":41},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":49}},{"generated":{"line":33,"column":42},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":25}},{"generated":{"line":34,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":25}},{"generated":{"line":34,"column":7},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":15,"column":8}},{"generated":{"line":34,"column":8},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":14,"column":18}},{"name":"callbackFn","generated":{"line":34,"column":11},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":16,"column":8}},{"generated":{"line":34,"column":21},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":16,"column":18}},{"name":"accumulator","generated":{"line":34,"column":22},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":16,"column":19}},{"generated":{"line":34,"column":33},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":16,"column":18}},{"name":"value","generated":{"line":34,"column":35},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":16,"column":32}},{"generated":{"line":34,"column":40},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":16,"column":18}},{"generated":{"line":34,"column":41},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":14,"column":4}},{"generated":{"line":35,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":37,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":13,"column":2}},{"generated":{"line":37,"column":56},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":13,"column":30}},{"generated":{"line":38,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":13,"column":30}},{"generated":{"line":39,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":17,"column":3}},{"generated":{"line":40,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":41,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":42,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":43,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":44,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":10,"column":64}},{"generated":{"line":46,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":19,"column":2}},{"name":"accumulator","generated":{"line":46,"column":9},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":19,"column":9}},{"generated":{"line":46,"column":20},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":19,"column":2}},{"generated":{"line":47,"column":0},"source":"../node_modules/graphql/jsutils/promiseReduce.mjs","original":{"line":20,"column":1}}],"sources":{"../node_modules/graphql/jsutils/promiseReduce.mjs":"import { isPromise } from './isPromise.mjs';\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nexport function promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n\n  for (const value of values) {\n    accumulator = isPromise(accumulator)\n      ? accumulator.then((resolved) => callbackFn(resolved, value))\n      : callbackFn(accumulator, value);\n  }\n\n  return accumulator;\n}\n"},"lineCount":null}},"error":null,"hash":"f3785af9081212ccbe3878c864ebdce0","cacheData":{"env":{}}}