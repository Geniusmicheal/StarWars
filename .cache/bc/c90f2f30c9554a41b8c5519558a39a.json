{"id":"../node_modules/@apollo/client/core/index.js","dependencies":[{"name":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js.map","includedInParent":true,"mtime":1650715685186},{"name":"/home/genius/Documents/project/react/node_graphql/package.json","includedInParent":true,"mtime":1650894909328},{"name":"/home/genius/Documents/project/react/node_graphql/.babelrc","includedInParent":true,"mtime":1650829125937},{"name":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/package.json","includedInParent":true,"mtime":1650715685186},{"name":"../utilities/globals/index.js","loc":{"line":1,"column":20,"index":20},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/utilities/globals/index.js"},{"name":"./ApolloClient.js","loc":{"line":2,"column":44,"index":97},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/ApolloClient.js"},{"name":"./ObservableQuery.js","loc":{"line":3,"column":55,"index":173},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/ObservableQuery.js"},{"name":"./networkStatus.js","loc":{"line":4,"column":30,"index":227},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/networkStatus.js"},{"name":"./types.js","loc":{"line":5,"column":14,"index":263},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/types.js"},{"name":"../errors/index.js","loc":{"line":6,"column":43,"index":320},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/errors/index.js"},{"name":"../cache/index.js","loc":{"line":7,"column":104,"index":446},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/cache/index.js"},{"name":"../cache/inmemory/types.js","loc":{"line":8,"column":14,"index":481},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/cache/inmemory/types.js"},{"name":"../link/core/index.js","loc":{"line":9,"column":14,"index":525},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/link/core/index.js"},{"name":"../link/http/index.js","loc":{"line":10,"column":14,"index":564},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/link/http/index.js"},{"name":"../link/utils/index.js","loc":{"line":11,"column":69,"index":658},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/link/utils/index.js"},{"name":"../utilities/index.js","loc":{"line":12,"column":56,"index":740},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/utilities/index.js"},{"name":"ts-invariant","loc":{"line":13,"column":29,"index":794},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/ts-invariant/lib/invariant.esm.js"},{"name":"graphql-tag","loc":{"line":16,"column":134,"index":1026},"parent":"/home/genius/Documents/project/react/node_graphql/node_modules/@apollo/client/core/index.js","resolved":"/home/genius/Documents/project/react/node_graphql/node_modules/graphql-tag/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  ApolloClient: true,\n  mergeOptions: true,\n  ObservableQuery: true,\n  applyNextFetchPolicy: true,\n  NetworkStatus: true,\n  isApolloError: true,\n  ApolloError: true,\n  Cache: true,\n  ApolloCache: true,\n  InMemoryCache: true,\n  MissingFieldError: true,\n  defaultDataIdFromObject: true,\n  makeVar: true,\n  fromError: true,\n  toPromise: true,\n  fromPromise: true,\n  throwServerError: true,\n  Observable: true,\n  isReference: true,\n  makeReference: true,\n  setLogVerbosity: true,\n  gql: true,\n  resetCaches: true,\n  disableFragmentWarnings: true,\n  enableExperimentalFragmentVariables: true,\n  disableExperimentalFragmentVariables: true\n};\nObject.defineProperty(exports, \"ApolloCache\", {\n  enumerable: true,\n  get: function () {\n    return _index3.ApolloCache;\n  }\n});\nObject.defineProperty(exports, \"ApolloClient\", {\n  enumerable: true,\n  get: function () {\n    return _ApolloClient.ApolloClient;\n  }\n});\nObject.defineProperty(exports, \"ApolloError\", {\n  enumerable: true,\n  get: function () {\n    return _index2.ApolloError;\n  }\n});\nObject.defineProperty(exports, \"Cache\", {\n  enumerable: true,\n  get: function () {\n    return _index3.Cache;\n  }\n});\nObject.defineProperty(exports, \"InMemoryCache\", {\n  enumerable: true,\n  get: function () {\n    return _index3.InMemoryCache;\n  }\n});\nObject.defineProperty(exports, \"MissingFieldError\", {\n  enumerable: true,\n  get: function () {\n    return _index3.MissingFieldError;\n  }\n});\nObject.defineProperty(exports, \"NetworkStatus\", {\n  enumerable: true,\n  get: function () {\n    return _networkStatus.NetworkStatus;\n  }\n});\nObject.defineProperty(exports, \"Observable\", {\n  enumerable: true,\n  get: function () {\n    return _index7.Observable;\n  }\n});\nObject.defineProperty(exports, \"ObservableQuery\", {\n  enumerable: true,\n  get: function () {\n    return _ObservableQuery.ObservableQuery;\n  }\n});\nObject.defineProperty(exports, \"applyNextFetchPolicy\", {\n  enumerable: true,\n  get: function () {\n    return _ObservableQuery.applyNextFetchPolicy;\n  }\n});\nObject.defineProperty(exports, \"defaultDataIdFromObject\", {\n  enumerable: true,\n  get: function () {\n    return _index3.defaultDataIdFromObject;\n  }\n});\nObject.defineProperty(exports, \"disableExperimentalFragmentVariables\", {\n  enumerable: true,\n  get: function () {\n    return _graphqlTag.disableExperimentalFragmentVariables;\n  }\n});\nObject.defineProperty(exports, \"disableFragmentWarnings\", {\n  enumerable: true,\n  get: function () {\n    return _graphqlTag.disableFragmentWarnings;\n  }\n});\nObject.defineProperty(exports, \"enableExperimentalFragmentVariables\", {\n  enumerable: true,\n  get: function () {\n    return _graphqlTag.enableExperimentalFragmentVariables;\n  }\n});\nObject.defineProperty(exports, \"fromError\", {\n  enumerable: true,\n  get: function () {\n    return _index6.fromError;\n  }\n});\nObject.defineProperty(exports, \"fromPromise\", {\n  enumerable: true,\n  get: function () {\n    return _index6.fromPromise;\n  }\n});\nObject.defineProperty(exports, \"gql\", {\n  enumerable: true,\n  get: function () {\n    return _graphqlTag.gql;\n  }\n});\nObject.defineProperty(exports, \"isApolloError\", {\n  enumerable: true,\n  get: function () {\n    return _index2.isApolloError;\n  }\n});\nObject.defineProperty(exports, \"isReference\", {\n  enumerable: true,\n  get: function () {\n    return _index7.isReference;\n  }\n});\nObject.defineProperty(exports, \"makeReference\", {\n  enumerable: true,\n  get: function () {\n    return _index7.makeReference;\n  }\n});\nObject.defineProperty(exports, \"makeVar\", {\n  enumerable: true,\n  get: function () {\n    return _index3.makeVar;\n  }\n});\nObject.defineProperty(exports, \"mergeOptions\", {\n  enumerable: true,\n  get: function () {\n    return _ApolloClient.mergeOptions;\n  }\n});\nObject.defineProperty(exports, \"resetCaches\", {\n  enumerable: true,\n  get: function () {\n    return _graphqlTag.resetCaches;\n  }\n});\nObject.defineProperty(exports, \"setLogVerbosity\", {\n  enumerable: true,\n  get: function () {\n    return _tsInvariant.setVerbosity;\n  }\n});\nObject.defineProperty(exports, \"throwServerError\", {\n  enumerable: true,\n  get: function () {\n    return _index6.throwServerError;\n  }\n});\nObject.defineProperty(exports, \"toPromise\", {\n  enumerable: true,\n  get: function () {\n    return _index6.toPromise;\n  }\n});\n\nvar _index = require(\"../utilities/globals/index.js\");\n\nvar _ApolloClient = require(\"./ApolloClient.js\");\n\nvar _ObservableQuery = require(\"./ObservableQuery.js\");\n\nvar _networkStatus = require(\"./networkStatus.js\");\n\nvar _types = require(\"./types.js\");\n\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _types[key];\n    }\n  });\n});\n\nvar _index2 = require(\"../errors/index.js\");\n\nvar _index3 = require(\"../cache/index.js\");\n\nvar _types2 = require(\"../cache/inmemory/types.js\");\n\nObject.keys(_types2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types2[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _types2[key];\n    }\n  });\n});\n\nvar _index4 = require(\"../link/core/index.js\");\n\nObject.keys(_index4).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _index4[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _index4[key];\n    }\n  });\n});\n\nvar _index5 = require(\"../link/http/index.js\");\n\nObject.keys(_index5).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _index5[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _index5[key];\n    }\n  });\n});\n\nvar _index6 = require(\"../link/utils/index.js\");\n\nvar _index7 = require(\"../utilities/index.js\");\n\nvar _tsInvariant = require(\"ts-invariant\");\n\nvar _graphqlTag = require(\"graphql-tag\");\n\n(0, _tsInvariant.setVerbosity)(_index.DEV ? \"log\" : \"silent\");"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/core/index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":191,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":193,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":195,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":197,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":199,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":201,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":202,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":203,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":204,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":205,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":206,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":207,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":208,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":209,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":210,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":211,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":213,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":215,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":217,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":219,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":220,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":221,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":222,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":223,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":224,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":225,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":226,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":227,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":228,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":229,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":231,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":233,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":234,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":235,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":236,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":237,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":238,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":239,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":240,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":241,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":242,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":243,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":245,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":247,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":248,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":249,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":250,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":251,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":252,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":253,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":254,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":255,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":256,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":257,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":66,"column":0},"generated":{"line":259,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":261,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":92,"column":0},"generated":{"line":263,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":265,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":94,"column":0},"generated":{"line":267,"column":0}},{"source":"../../src/core/index.ts","name":null,"original":{"line":94,"column":13},"generated":{"line":267,"column":31}},{"source":"../../src/core/index.ts","name":null,"original":{"line":94,"column":19},"generated":{"line":267,"column":44}},{"source":"../../src/core/index.ts","name":null,"original":{"line":94,"column":13},"generated":{"line":267,"column":49}},{"source":"../../src/core/index.ts","name":null,"original":{"line":94,"column":27},"generated":{"line":267,"column":52}},{"source":"../../src/core/index.ts","name":null,"original":{"line":94,"column":0},"generated":{"line":267,"column":60}}],"sources":{"../../src/core/index.ts":"/* Core */\n\nimport { DEV } from '../utilities/globals';\n\nexport {\n  ApolloClient,\n  ApolloClientOptions,\n  DefaultOptions,\n  mergeOptions,\n} from './ApolloClient';\nexport {\n  ObservableQuery,\n  FetchMoreOptions,\n  UpdateQueryOptions,\n  applyNextFetchPolicy,\n} from './ObservableQuery';\nexport {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  SubscriptionOptions,\n  FetchPolicy,\n  WatchQueryFetchPolicy,\n  ErrorPolicy,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n} from './watchQueryOptions';\nexport { NetworkStatus } from './networkStatus';\nexport * from './types';\nexport {\n  Resolver,\n  FragmentMatcher,\n} from './LocalState';\nexport { isApolloError, ApolloError } from '../errors';\n\n/* Cache */\n\nexport {\n  // All the exports (types and values) from ../cache, minus cacheSlot,\n  // which we want to keep semi-private.\n  Cache,\n  ApolloCache,\n  Transaction,\n  DataProxy,\n  InMemoryCache,\n  InMemoryCacheConfig,\n  MissingFieldError,\n  defaultDataIdFromObject,\n  ReactiveVar,\n  makeVar,\n  TypePolicies,\n  TypePolicy,\n  FieldPolicy,\n  FieldReadFunction,\n  FieldMergeFunction,\n  FieldFunctionOptions,\n  PossibleTypesMap,\n} from '../cache';\n\nexport * from '../cache/inmemory/types';\n\n/* Link */\n\nexport * from '../link/core';\nexport * from '../link/http';\nexport {\n  fromError,\n  toPromise,\n  fromPromise,\n  ServerError,\n  throwServerError,\n} from '../link/utils';\n\n/* Utilities */\n\nexport {\n  Observable,\n  Observer,\n  ObservableSubscription,\n  Reference,\n  isReference,\n  makeReference,\n  StoreObject,\n} from '../utilities';\n\n/* Supporting */\n\n// The verbosity of invariant.{log,warn,error} can be controlled globally\n// (for anyone using the same ts-invariant package) by passing \"log\",\n// \"warn\", \"error\", or \"silent\" to setVerbosity (\"log\" is the default).\n// Note that all invariant.* logging is hidden in production.\nimport { setVerbosity } from \"ts-invariant\";\nexport { setVerbosity as setLogVerbosity }\nsetVerbosity(DEV ? \"log\" : \"silent\");\n\n// Note that importing `gql` by itself, then destructuring\n// additional properties separately before exporting, is intentional.\n// Due to the way the `graphql-tag` library is setup, certain bundlers\n// can't find the properties added to the exported `gql` function without\n// additional guidance (e.g. Rollup - see\n// https://rollupjs.org/guide/en/#error-name-is-not-exported-by-module).\n// Instead of having people that are using bundlers with `@apollo/client` add\n// extra bundler config to help `graphql-tag` exports be found (which would be\n// awkward since they aren't importing `graphql-tag` themselves), this\n// workaround of pulling the extra properties off the `gql` function,\n// then re-exporting them separately, helps keeps bundlers happy without any\n// additional config changes.\nexport {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n} from 'graphql-tag';\n"},"lineCount":null}},"error":null,"hash":"7386b57da917e8737020bc3f7b647412","cacheData":{"env":{}}}